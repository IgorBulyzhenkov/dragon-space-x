{"version":3,"file":"static/js/DragonDetails.df1d4d05.chunk.js","mappings":"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","sources":["webpack://test-front/./src/pages/DragonDetails.module.css?e86c","pages/DragonDetails.js","redux/dragon/dragon-selector.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"DragonDetails_main__URhdU\",\"title\":\"DragonDetails_title__l7pqS\",\"containerImg\":\"DragonDetails_containerImg__DZGS-\",\"img\":\"DragonDetails_img__NcU16\",\"list\":\"DragonDetails_list__e+uUx\",\"item\":\"DragonDetails_item__R6uu0\",\"text\":\"DragonDetails_text__ALd+d\",\"span\":\"DragonDetails_span__iHCEQ\",\"link\":\"DragonDetails_link__O9Cgk\",\"listContainer\":\"DragonDetails_listContainer__Bvo6Z\",\"wrap\":\"DragonDetails_wrap__4juE1\"};","import { useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"../component/Container/Container\";\nimport { getDragonId } from \"../redux/dragon/dragon-selector\";\nimport s from \"./DragonDetails.module.css\";\n\nfunction DragonDetails() {\n  //   const [dragonId, setDragonId] = useState([]);\n  const dataId = useSelector(getDragonId);\n  //   setDragonId([dataId]);\n  const {\n    name,\n    active,\n    description,\n    flickr_images,\n    first_flight,\n    wikipedia,\n    type,\n    height_w_trunk,\n    dry_mass_kg,\n  } = dataId;\n\n  return (\n    <main className={s.main}>\n      <Container>\n        <h1 className={s.title}>{name}</h1>\n        <div className={s.wrap}>\n          <div className={s.containerImg}>\n            {flickr_images?.map((el) => {\n              return <img src={el} alt={el} className={s.img} key={uuidv4()} />;\n            })}\n          </div>\n          <div className={s.listContainer}>\n            <ul className={s.list}>\n              <li className={s.item}>\n                <p className={s.text}>Active:</p>\n                <span className={s.span}>{active ? \"yes\" : \"no\"}</span>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}>First flight:</p>\n                <span className={s.span}>{first_flight}</span>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}>Type:</p>\n                <span className={s.span}>{type}</span>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}>Dry mass kg:</p>\n                <span className={s.span}>{dry_mass_kg}kg</span>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}>Height w trunk:</p>\n                <span className={s.span}>{height_w_trunk?.meters}m</span>\n              </li>\n              <li className={s.item}>\n                <a\n                  href={wikipedia}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className={s.link}\n                >\n                  <span className={s.span}>Wikipedia:</span> {name}\n                </a>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}> Description: </p>\n                <span className={s.span}>{description}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Container>\n    </main>\n  );\n}\n\nexport default DragonDetails;\n","export const getDragonItems = (state) => state?.dragon?.items;\nexport const getDragonId = (state) => state?.dragon?.itemsId;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["dataId","useSelector","getDragonId","name","active","description","flickr_images","first_flight","wikipedia","type","height_w_trunk","dry_mass_kg","className","s","Container","map","el","src","alt","uuidv4","meters","href","target","rel","getDragonItems","state","dragon","items","itemsId","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}