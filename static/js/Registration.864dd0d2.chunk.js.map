{"version":3,"file":"static/js/Registration.864dd0d2.chunk.js","mappings":"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","sources":["webpack://test-front/./src/component/VerifyMail/VerifyMail.module.css?4c8a","component/VerifyMail/VerifyMail.js","webpack://test-front/./src/component/Form/Registry.module.css?8153","component/Form/Registry.js","webpack://test-front/./src/pages/Registration.module.css?2d03","pages/Registration.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"textContainer\":\"VerifyMail_textContainer__SXR-N\",\"text\":\"VerifyMail_text__EVqn+\",\"span\":\"VerifyMail_span__jvypc\",\"button\":\"VerifyMail_button__hQS1R\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getUserMail } from \"../../redux/user/user-selectors\";\nimport s from \"./VerifyMail.module.css\";\nimport user from \"../../redux/user/userOperation\";\n\nconst { fetchVerifyMail } = user;\n\nfunction VerifyMail() {\n  const email = useSelector(getUserMail);\n\n  const dispatch = useDispatch();\n  const handleClick = (e) => {\n    e.preventDefault();\n    dispatch(fetchVerifyMail());\n  };\n\n  return (\n    <div className={s.textContainer}>\n      <p className={s.text}>\n        A letter has been sent to the <span className={s.span}>{email}</span> to\n        confirm the e-mail. If the email has not arrived, click send again\n      </p>\n      <button type=\"button\" className={s.button} onClick={handleClick}>\n        send again\n      </button>\n    </div>\n  );\n}\n\nexport default VerifyMail;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Registry_form__8L3Ff\",\"formContainer\":\"Registry_formContainer__4vVa8\",\"textContainer\":\"Registry_textContainer__kWHw+\",\"label\":\"Registry_label__hT-lj\",\"title\":\"Registry_title__LB77P\",\"text\":\"Registry_text__zUbJ+\",\"buttonReg\":\"Registry_buttonReg__V5zqX\",\"spanLabel\":\"Registry_spanLabel__6IT9A\",\"textField\":\"Registry_textField__i-b79\",\"textField__input\":\"Registry_textField__input__sr6wF\"};","import { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport s from \"./Registry.module.css\";\nimport user from \"../../redux/user/userOperation\";\n\nconst { registrationNewUser } = user;\n\nfunction Registry() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setEmail(\"\");\n    setName(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email && password && name) {\n      dispatch(registrationNewUser({ name, email, password, reset }));\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n\n      case \"email\":\n        return setEmail(value);\n\n      case \"password\":\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={s.formContainer}>\n      <div className={s.textContainer}>\n        <h1 className={s.title}>Hello!</h1>\n        <p className={s.text}>\n          I am glad that you are reviewing my test assignment. In order to go to\n          the main pages, you need to register, then confirm your email, and\n          only then browse the site. The website is adapted to all types of\n          devices, from mobile to desktop. I wish you a nice day and a pleasant\n          viewing!\n        </p>\n      </div>\n      {/* <h1>Anywhere in your app!</h1> */}\n      <Formik\n        validate={(values) => {\n          const errors = {};\n          if (!values?.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        }}\n      >\n        {({\n          errors,\n          touched,\n          handleBlur,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label}>\n              <span className={s.spanLabel}>Name</span>\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={name}\n                className={s.textField__input}\n                placeholder=\"you name\"\n              />\n            </label>\n            <label className={s.label}>\n              <span className={s.spanLabel}>Email</span>\n              <input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={email}\n                className={s.textField__input}\n                placeholder=\"your@mail.com\"\n              />\n            </label>\n\n            {errors.email && touched.email && errors.email}\n            <label className={s.label}>\n              <span className={s.spanLabel}>Password</span>\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={password}\n                className={s.textField__input}\n                placeholder=\"you password\"\n              />\n            </label>\n\n            {errors.password && touched.password && errors.password}\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={s.buttonReg}\n            >\n              Registration\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\nexport default Registry;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Registration_main__uvbOy\"};","import { useSelector } from \"react-redux\";\nimport Registry from \"../component/Form/Registry\";\nimport VerifyMail from \"../component/VerifyMail/VerifyMail\";\nimport { getVerifyMail } from \"../redux/user/user-selectors\";\nimport s from \"./Registration.module.css\";\nimport Container from \"../component/Container/Container\";\nfunction Registration() {\n  const verifyMail = useSelector(getVerifyMail);\n\n  return (\n    <main className={s.main}>\n      <Container>\n        <Registry />\n        {verifyMail ? <VerifyMail /> : null}\n      </Container>\n    </main>\n  );\n}\nexport default Registration;\n"],"names":["fetchVerifyMail","user","email","useSelector","getUserMail","dispatch","useDispatch","className","s","type","onClick","e","preventDefault","registrationNewUser","useState","setEmail","password","setPassword","name","setName","reset","handleSubmit","handleChange","target","value","validate","values","errors","test","touched","handleBlur","isSubmitting","onSubmit","onChange","onBlur","placeholder","disabled","verifyMail","getVerifyMail","Container","VerifyMail"],"sourceRoot":""}